Lenguajes de programación

¿Qué diferencia existe entre los lenguajes declarativos y los imperativos?. Nombra al menos 2 de cada tipo.

  Los lenguajes declarativos no requieren de que se les indique el proceso. En estos simplemente se declara el resultado deseado y este se obtiene por métodos internos.(Haskell y SQL)

  En los lenguajes imperativos se requiere la especificación de los pasos a seguir para obtener un resultado. (Java y C#)


¿Explica qué es compilar? ¿Explica qué es interpretar?

	Compilar es el proceso de obtención de código objeto en que se realiza la interpretación de todo el código antes que la ejecución del mismo. 
	
	Interpretar es el proceso de ejecución de código por fragmentos que posteriormente son eliminados de la memoria.

Ventajas de los lenguajes compilados.
	
	Son lenguajes muy eficientes en ejecución pues no es necesario crear el código objeto antes de cada ejecución

Ventajas de los lenguajes interpretados.

	El código se interpreta directamente así que es más rápido realizar cambios al programa

Nombra 2 lenguajes compilados y otros 2 interpretados.

	Compilados: C++ y C
	Interpretados: CSS y JavaScript

¿Puede considerarse código objeto el bytecode generado en Java tras la compilación? Explica la respuesta.
	
	Si se puede considerar código objeto al ser producto de la compilación y objeto de la interpretación de un intérprete. Con la salvedad de que ese intérprete es específico para Java.





Pon un ejemplo de lenguaje de los siguientes tipos:

  Bajo nivel. Lenguaje máquina
  Nivel medio. Ensamblador
  Alto nivel. Python

¿Qué paradigma de programación siguen los siguientes lenguajes?

  C Imperativo
  C++ Imperativo
  SQL Declarativo
  Java Imperativo
  Javascript Multiparadigma
  Lisp Multiparadigma
  Prolog Imperativo
  Puedes consultar el siguiente enlace:

https://es.wikipedia.org/wiki/Paradigma_de_programaci%C3%B3n

Explica qué criterios pueden seguirse a la hora de elegir un lenguaje de programación para el desarrollo software.
	
	Campo de aplicación, si se utiliza en tu área de trabajo
 	Experiencia previa, si has trabajado con lenguajes similares
  Herramientas de desarrollo, , si tienes acceso a las herramientas necesarias para trabajar con él
  Documentación disponible,  la cantidad de documentación y sitios de consulta disponibles
  Base de usuarios, la cantidad de usuarios con los que poder trabajar o a los que realizar consultas
  Reusabilidad, pues eso
  Portabilidad, dependiendo del área es más o menos importante
  Imposición del cliente, si pone la pasta y se encabezona, decide el lenguaje


Ciclo de vida del sofware

Define "Ciclo de vida del software".

	Número de modificaciones que soporta un software hasta que este se vuelve obsoleto y sus errores insolucionables

Nombra las fases principales del desarrollo de software y explica brevemente que se hace en cada una de ellas.
	
	Recopilación de datos
	Diseño de software
	Realización de pruebas
	Explotación del software

Explica brevemente en qué consiste el modelo en cascada cuando hablamos de desarrollo de software.

	Se desarrolla cada una de las siguientes fases en orden y sin comunicación de los procesos intermedios de cada fase. (Análisis, diseño, codificación, pruebas y mantenimiento)

 Ventajas e inconvenientes del modelo en cascada.
	
	Las pricipales ventajas son que no tienes al cliente pidiendo modificaciones y puedes llevar a cabo tu diseño original atendiendo a las necesidades expresadas por el mismo en la primera y única reunión.

	El inconveniente principal, por otro lado, es que el cliente no tiene conocimiento del avance del desarrollo del producto y probablemente se encuentre descontento con el resultado debido a la gran falta de comunicación entre el cliente y el conjunto de desarrolladores

 ¿Qué se entiende por verificación? ¿Y por validación?
	
	La verificación alude al cumplimiento de los requisitos, funcionales y no funcionales, que solicita el cliente, mientras que la verificación alude al cumplimiento de las expectativas del cliente sobre el producto. Respectivamente responden a las preguntas: ¿Estamos construyendo el producto correctamente? y ¿Estamos construyendo el producto correcto?

 Explica cómo funciona el modelo de desarrollo mediante creación de prototipos.
	
	Tras un primer análisis se crea un prototipo, desechable o no, y se muestra al cliente para que este lo pruebe y decida sobre posibles modificaciones, que, tras ser comunicadas, pasan a ser analizadas de nuevo y se crea, en base a ellas, otro prototipo. Repitiendo este proceso cuantas veces sea necesario
	
    
 Qué cuatro principios rigen el desarrollo ágil expresados en el Manifiesto Ágil?

  Individuos e interacciones sobre procesos y herramientas
  Software funcionando sobre documentación extensiva 
  Colaboración con el cliente sobre negociación contractual 
  Respuesta ante el cambio sobre seguir un plan
